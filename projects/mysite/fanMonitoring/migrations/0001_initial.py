# Generated by Django 4.1.1 on 2022-10-09 05:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverType', models.CharField(default='ETC', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverName', models.CharField(max_length=200, null=True)),
                ('linuxIp', models.CharField(max_length=200)),
                ('linuxId', models.CharField(default='root', max_length=200)),
                ('linuxPw', models.CharField(default='cua001', max_length=200)),
                ('iloIp', models.CharField(max_length=200)),
                ('iloId', models.CharField(default='Administrator', max_length=200)),
                ('iloPw', models.CharField(max_length=200)),
                ('sshPort', models.CharField(default='22', max_length=200)),
                ('serverTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fanMonitoring.servertype')),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rxPps', models.FloatField()),
                ('txPps', models.FloatField()),
                ('time', models.DateTimeField(null=True)),
                ('serverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fanMonitoring.server')),
            ],
        ),
        migrations.CreateModel(
            name='Ilo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fan1', models.IntegerField(null=True)),
                ('fan1Status', models.BooleanField(default=False)),
                ('fan2', models.IntegerField(null=True)),
                ('fan2Status', models.BooleanField(default=False)),
                ('fan3', models.IntegerField(null=True)),
                ('fan3Status', models.BooleanField(default=False)),
                ('fan4', models.IntegerField(null=True)),
                ('fan4Status', models.BooleanField(default=False)),
                ('cpuThermal', models.FloatField(null=True)),
                ('cpuThermalStatus', models.BooleanField(default=False)),
                ('memThermal', models.FloatField(null=True)),
                ('memThermalStatus', models.BooleanField(default=False)),
                ('time', models.DateTimeField(null=True)),
                ('serverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fanMonitoring.server')),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('connectToLinux', models.BooleanField()),
                ('connectToIlo', models.BooleanField()),
                ('serverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fanMonitoring.server')),
            ],
        ),
        migrations.CreateModel(
            name='Cmh',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cpu', models.IntegerField()),
                ('cpuStatus', models.BooleanField(default=False)),
                ('mem', models.IntegerField()),
                ('memStatus', models.BooleanField(default=False)),
                ('hdd', models.IntegerField()),
                ('hddStatus', models.BooleanField(default=False)),
                ('time', models.DateTimeField(null=True)),
                ('serverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fanMonitoring.server')),
            ],
        ),
    ]
